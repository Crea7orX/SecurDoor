{
  "Zod": {
    "errors": {
      "custom": "Invalid input",
      "invalid_arguments": "Invalid function arguments",
      "invalid_date": "Invalid date",
      "invalid_enum_value": "Invalid enum value. Expected {options}, received '{received}'",
      "invalid_intersection_types": "Intersection results could not be merged",
      "invalid_literal": "Invalid literal value, expected {expected}",
      "invalid_return_type": "Invalid function return type",
      "invalid_string": {
        "cuid": "Invalid {validation}",
        "datetime": "Invalid {validation}",
        "email": "Invalid {validation}",
        "endsWith": "Invalid input: must end with \"{endsWith}\"",
        "regex": "Invalid",
        "startsWith": "Invalid input: must start with \"{startsWith}\"",
        "url": "Invalid {validation}",
        "uuid": "Invalid {validation}"
      },
      "invalid_type": "Expected {expected}, received {received}",
      "invalid_type_received_undefined": "Required",
      "invalid_type_with_path": "{path} is expected {expected}, but received {received}",
      "invalid_union": "Invalid input",
      "invalid_union_discriminator": "Invalid discriminator value. Expected {options}",
      "not_finite": "Number must be finite",
      "not_multiple_of": "Number must be a multiple of {multipleOf}",
      "too_big": {
        "array": {
          "exact": "Array must contain exactly {maximum} element(s)",
          "inclusive": "Array must contain at most {maximum} {count, plural, =1 {element} other {elements}}",
          "not_inclusive": "Array must contain less than {maximum} {count, plural, =1 {element} other {elements}}"
        },
        "date": {
          "exact": "Date must be exactly {maximum}, {datetime}",
          "inclusive": "Date must be smaller than or equal to {maximum}, {datetime}",
          "not_inclusive": "Date must be smaller than {maximum}, {datetime}"
        },
        "number": {
          "exact": "Number must be exactly {maximum}",
          "inclusive": "Number must be less than or equal to {maximum}",
          "inclusive_with_path": "{path} must be less than or equal to {maximum}",
          "not_inclusive": "Number must be less than {maximum}",
          "not_inclusive_with_path": "{path} must be less than {maximum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {maximum} character(s)",
          "inclusive": "String must contain at most {maximum} {count, plural, =1 {character} other {characters}}",
          "inclusive_with_path": "{path} must contain at most {maximum} {count, plural, =1 {character} other {characters}}",
          "not_inclusive": "String must contain under {maximum} {count, plural, =1 {character} other {characters}}",
          "not_inclusive_with_path": "{path} must contain under {maximum} {count, plural, =1 {character} other {characters}}"
        }
      },
      "too_small": {
        "array": {
          "exact": "Array must contain exactly {minimum} element(s)",
          "inclusive": "Array must contain at least {minimum} {count, plural, =1 {element} other {elements}}",
          "not_inclusive": "Array must contain more than {minimum} {count, plural, =1 {element} other {elements}}"
        },
        "date": {
          "exact": "Date must be exactly {minimum}, {datetime}",
          "inclusive": "Date must be greater than or equal to {minimum}, {datetime}",
          "not_inclusive": "Date must be greater than {minimum}, {datetime}"
        },
        "number": {
          "exact": "Number must be exactly {minimum}",
          "exact_with_path": "{path} must be exactly {minimum}",
          "inclusive": "Number must be greater than or equal to {minimum}",
          "inclusive_with_path": "{path} must be greater than or equal to {minimum}",
          "not_inclusive": "Number must be greater than {minimum}",
          "not_inclusive_with_path": "{path} must be greater than {minimum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {minimum} character(s)",
          "exact_with_path": "{path} must contain exactly {minimum} {count, plural, =1 {character} other {characters}}",
          "inclusive": "String must contain at least {minimum} {count, plural, =1 {character} other {characters}}",
          "inclusive_with_path": "{path} must contain at least {minimum} {count, plural, =1 {character} other {characters}}",
          "not_inclusive": "String must contain over {minimum} {count, plural, =1 {character} other {characters}}s",
          "not_inclusive_with_path": "{path} must contain over {minimum} {count, plural, =1 {character} other {characters}}"
        }
      },
      "unrecognized_keys": "Unrecognized {count, plural, =1 {key} other {keys}} in object: {keys}"
    },
    "types": {
      "array": "array",
      "bigint": "bigint",
      "boolean": "boolean",
      "date": "date",
      "float": "float",
      "function": "function",
      "integer": "integer",
      "map": "map",
      "nan": "nan",
      "never": "never",
      "null": "null",
      "number": "number",
      "object": "object",
      "promise": "promise",
      "set": "set",
      "string": "string",
      "symbol": "symbol",
      "undefined": "undefined",
      "unknown": "unknown",
      "void": "void"
    },
    "validations": {
      "cuid": "cuid",
      "datetime": "datetime",
      "email": "email",
      "regex": "regex",
      "url": "url",
      "uuid": "uuid"
    }
  }
}
